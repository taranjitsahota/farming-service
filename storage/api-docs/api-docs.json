{
    "openapi": "3.0.0",
    "info": {
        "title": "Farming Service API",
        "description": "API documentation for Farming Service",
        "version": "1.0.0"
    },
    "paths": {
        "/api/areas": {
            "get": {
                "tags": [
                    "Areas"
                ],
                "summary": "Get all areas",
                "operationId": "f16518e18a005a2f966b63c0e1745342",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/200"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Areas"
                ],
                "summary": "Add a new area",
                "description": "Create a new area with city, state, village, pincode, and enabled status.",
                "operationId": "beeb06a4f56c4e31c8448c405163bed9",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "city_id",
                                    "state_id",
                                    "pincode"
                                ],
                                "properties": {
                                    "city_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "state_id": {
                                        "type": "integer",
                                        "example": 2
                                    },
                                    "village": {
                                        "type": "string",
                                        "example": "Greenfield"
                                    },
                                    "pincode": {
                                        "type": "string",
                                        "example": "123456"
                                    },
                                    "is_enabled": {
                                        "type": "boolean",
                                        "example": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "$ref": "#/components/responses/201"
                    },
                    "422": {
                        "$ref": "#/components/responses/422"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/areas/{id}": {
            "get": {
                "tags": [
                    "Areas"
                ],
                "summary": "Get a specific area",
                "operationId": "d45f3822a5bdba2f44520ac32857bfb4",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Area ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/200"
                    },
                    "422": {
                        "$ref": "#/components/responses/422"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Areas"
                ],
                "summary": "Update an existing area",
                "operationId": "cc20a1af054acc1ea386968c8d9ba095",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Area ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "pincode": {
                                        "type": "string",
                                        "example": "654321"
                                    },
                                    "village": {
                                        "type": "string",
                                        "example": "Updated Village"
                                    },
                                    "is_enabled": {
                                        "type": "boolean",
                                        "example": false
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/200"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Areas"
                ],
                "summary": "Soft delete an area",
                "operationId": "820be3b502aa09c30f43b877c1c4527e",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Area ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/200"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/attachments": {
            "get": {
                "tags": [
                    "Attachments"
                ],
                "summary": "Get all attachments",
                "description": "Display a listing of the resource.",
                "operationId": "3d2efaeda133c99c3c0192389f5a6ef5",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/200"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Attachments"
                ],
                "summary": "Create an attachment",
                "description": "Store a newly created resource in storage.",
                "operationId": "ce1f73699a3fcd9230ed2a70d477dc6d",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "attachment_name",
                                    "attachment_type"
                                ],
                                "properties": {
                                    "attachment_name": {
                                        "type": "string",
                                        "example": "Invoice.pdf"
                                    },
                                    "attachment_type": {
                                        "type": "string",
                                        "example": "PDF"
                                    },
                                    "is_enabled": {
                                        "type": "boolean",
                                        "example": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "$ref": "#/components/responses/201"
                    },
                    "422": {
                        "$ref": "#/components/responses/422"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/attachments/{id}": {
            "get": {
                "tags": [
                    "Attachments"
                ],
                "summary": "Get an attachment by ID",
                "description": "Display the specified resource.",
                "operationId": "bbe2d2185b97b2716f9e2269d2399452",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/200"
                    },
                    "404": {
                        "description": "Attachment not found"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Attachments"
                ],
                "summary": "Update an attachment",
                "description": "Update the specified resource in storage.",
                "operationId": "70fc4a3154297ff4872ecf5afe31c90c",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "attachment_name": {
                                        "type": "string",
                                        "example": "Updated Invoice.pdf"
                                    },
                                    "attachment_type": {
                                        "type": "string",
                                        "example": "PDF"
                                    },
                                    "is_enabled": {
                                        "type": "boolean",
                                        "example": false
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/200"
                    },
                    "404": {
                        "description": "Attachment not found"
                    },
                    "422": {
                        "$ref": "#/components/responses/422"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Attachments"
                ],
                "summary": "Delete an attachment (soft delete)",
                "description": "Remove the specified resource from storage.",
                "operationId": "e5796e0e4d3a3f40f6eff683683b013e",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/200"
                    },
                    "404": {
                        "description": "Attachment not found"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/register-superadmin-admin": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Register a new user",
                "description": "Register a new admin & superadmin.",
                "operationId": "125ead1129daacea416bc6c43cd40596",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "email",
                                    "password",
                                    "password_confirmation",
                                    "role_id"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "example": "john.doe@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "password123"
                                    },
                                    "password_confirmation": {
                                        "type": "string",
                                        "example": "password123"
                                    },
                                    "role": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "$ref": "#/components/responses/201"
                    },
                    "422": {
                        "$ref": "#/components/responses/422"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                }
            }
        },
        "/api/register-user": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Register a new admin & superadmin",
                "description": "Registers a new user with name, email (optional), contact number, and pin.",
                "operationId": "9a5c22700e503a11b63eb63c15fb359e",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "contact_number",
                                    "pin"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "example": "john.doe@example.com",
                                        "nullable": true
                                    },
                                    "contact_number": {
                                        "type": "string",
                                        "example": "+1234567890"
                                    },
                                    "pin": {
                                        "type": "string",
                                        "example": "1234"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "$ref": "#/components/responses/201"
                    },
                    "422": {
                        "$ref": "#/components/responses/422"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                }
            }
        },
        "/api/complete-profile": {
            "post": {
                "tags": [
                    "User Profile completion"
                ],
                "summary": "Complete user profile",
                "description": "Allows authenticated users to complete their profile by providing additional details.",
                "operationId": "4c29d40ee784b1c2a62a92eb0e74feb6",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "first_name",
                                    "fathers_name",
                                    "pincode",
                                    "village",
                                    "post_office",
                                    "police_station",
                                    "district",
                                    "total_servicable_land"
                                ],
                                "properties": {
                                    "first_name": {
                                        "type": "string",
                                        "example": "John"
                                    },
                                    "last_name": {
                                        "type": "string",
                                        "example": "Doe"
                                    },
                                    "fathers_name": {
                                        "type": "string",
                                        "example": "Robert Doe"
                                    },
                                    "pincode": {
                                        "type": "string",
                                        "example": "123456"
                                    },
                                    "village": {
                                        "type": "string",
                                        "example": "Greenfield"
                                    },
                                    "post_office": {
                                        "type": "string",
                                        "example": "Greenfield PO"
                                    },
                                    "police_station": {
                                        "type": "string",
                                        "example": "Greenfield PS"
                                    },
                                    "district": {
                                        "type": "string",
                                        "example": "Central District"
                                    },
                                    "total_servicable_land": {
                                        "type": "string",
                                        "example": "5 acres"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/200"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "422": {
                        "$ref": "#/components/responses/422"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/login-user": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "User login",
                "description": "Logs in a user using contact number and PIN",
                "operationId": "42dc06fc50e6c2d8c00754e67093e550",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "contact_number",
                                    "pin"
                                ],
                                "properties": {
                                    "contact_number": {
                                        "type": "string",
                                        "example": "9876543210"
                                    },
                                    "pin": {
                                        "type": "string",
                                        "example": "1234"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/200"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "422": {
                        "$ref": "#/components/responses/422"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                }
            }
        },
        "/api/login-superadmin-admin": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Log in a user",
                "description": "Log in a user.",
                "operationId": "f96775914a5b99108902ace011328880",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "example": "john.doe@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "password123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/200"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                }
            }
        },
        "/api/logout": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Logout a user",
                "description": "Logs out the currently authenticated user and deletes their tokens",
                "operationId": "fe8f3429cd6979b3b4517e186505f9f9",
                "responses": {
                    "200": {
                        "description": "Successfully logged out",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Logged out successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized access",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/auth/send-otp": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Send OTP for password reset",
                "description": "Send OTP to the provided phone number or email based on user selection.",
                "operationId": "sendOtpForPasswordReset",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "contact_type",
                                    "contact"
                                ],
                                "properties": {
                                    "contact_type": {
                                        "type": "string",
                                        "enum": [
                                            "email",
                                            "phone"
                                        ],
                                        "example": "phone"
                                    },
                                    "contact": {
                                        "type": "string",
                                        "example": "+918104535322"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/200"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                }
            }
        },
        "/api/verify-otp": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Verify OTP",
                "description": "Verifies the OTP and logs in the user",
                "operationId": "7809ddcd47cab2525ccd43d1c2031bfd",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "user_id",
                                    "otp"
                                ],
                                "properties": {
                                    "user_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "otp": {
                                        "type": "integer",
                                        "example": 123456
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/200"
                    },
                    "400": {
                        "description": "Invalid or expired OTP",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid or expired OTP"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/422"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                }
            }
        },
        "/api/auth/resend-otp": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Resend OTP to email or phone",
                "description": "Allows users to request a new OTP via email or SMS",
                "operationId": "resendOtp",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "user_id",
                                    "contact_type"
                                ],
                                "properties": {
                                    "user_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "contact_type": {
                                        "type": "string",
                                        "enum": [
                                            "email",
                                            "phone"
                                        ],
                                        "example": "phone"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/200"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                }
            }
        },
        "/api/check-eligibility": {
            "post": {
                "tags": [
                    "Service Eligibility"
                ],
                "summary": "Check if a service is available in a given area",
                "description": "Checks if a service is available in a given area based on the pincode and service ID. Requires authentication and a completed profile.",
                "operationId": "37cf0caa3f259bbb693b39f335439273",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "pincode",
                                    "service_id"
                                ],
                                "properties": {
                                    "pincode": {
                                        "type": "string",
                                        "example": "123456"
                                    },
                                    "service_id": {
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/200"
                    },
                    "422": {
                        "$ref": "#/components/responses/422"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/services": {
            "post": {
                "tags": [
                    "Services"
                ],
                "summary": "Add a new service",
                "description": "Create a new service with name, description, price, and enabled status.",
                "operationId": "b05b71c30267faa468172458580fb6fc",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "service_name",
                                    "price"
                                ],
                                "properties": {
                                    "service_name": {
                                        "type": "string",
                                        "example": "Lawn Mowing"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "A basic lawn mowing service"
                                    },
                                    "price": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 50
                                    },
                                    "is_enabled": {
                                        "type": "boolean",
                                        "example": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "$ref": "#/components/responses/201"
                    },
                    "422": {
                        "$ref": "#/components/responses/422"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/services/{id}": {
            "get": {
                "tags": [
                    "Services"
                ],
                "summary": "Display a specific service",
                "description": "Get the details of a specific service.",
                "operationId": "42775b582b563bc36a9e06ae850100bf",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/200"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Services"
                ],
                "summary": "Update a service",
                "description": "Update the details of an existing service.",
                "operationId": "38f6a6cc2f5cd3dfdf39805e7fa21996",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "service_name",
                                    "price"
                                ],
                                "properties": {
                                    "service_name": {
                                        "type": "string",
                                        "example": "Lawn Mowing"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Updated description of service"
                                    },
                                    "price": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 60
                                    },
                                    "is_enabled": {
                                        "type": "boolean",
                                        "example": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/200"
                    },
                    "422": {
                        "$ref": "#/components/responses/422"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Services"
                ],
                "summary": "Delete a service",
                "description": "Remove a service from the database.",
                "operationId": "c189d6ab2d037e8fb4228a535ae6a399",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/200"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/service-areas": {
            "get": {
                "tags": [
                    "Service Areas"
                ],
                "summary": "Get all service areas",
                "operationId": "570649393246232ca3440cb3fbfb3d12",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/200"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Service Areas"
                ],
                "summary": "Create a new service area",
                "operationId": "bd76742c6ab362e23384c4f96f8422a7",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "service_id",
                                    "area_id"
                                ],
                                "properties": {
                                    "service_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "area_id": {
                                        "type": "integer",
                                        "example": 2
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "$ref": "#/components/responses/201"
                    },
                    "422": {
                        "$ref": "#/components/responses/422"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/service-areas/{id}": {
            "get": {
                "tags": [
                    "Service Areas"
                ],
                "summary": "Get a specific service area",
                "operationId": "4ee6760ed407d65101e1514df752f02d",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Service Area ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/200"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Service Areas"
                ],
                "summary": "Update an existing service area",
                "operationId": "b8535a1987cf14b164174e13fb051842",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Service Area ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "service_id",
                                    "area_id"
                                ],
                                "properties": {
                                    "service_id": {
                                        "type": "integer",
                                        "example": 3
                                    },
                                    "area_id": {
                                        "type": "integer",
                                        "example": 4
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/200"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "422": {
                        "$ref": "#/components/responses/422"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Service Areas"
                ],
                "summary": "Soft delete a service area",
                "operationId": "0dea6db11623c89f50d282b4ea687577",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Service Area ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/200"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        }
    },
    "components": {
        "responses": {
            "403": {
                "description": "Unauthorized access",
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "status": {
                                    "type": "boolean",
                                    "example": false
                                },
                                "status_code": {
                                    "type": "integer",
                                    "example": 401
                                },
                                "message": {
                                    "type": "string",
                                    "example": "Unauthorized access."
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "500": {
                "description": "Internal Server Error",
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "example": "Something went wrong!"
                                },
                                "error": {
                                    "type": "string",
                                    "example": "Internal Server Error"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "401": {
                "description": "Invalid credentials",
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "example": "Invalid credentials"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "200": {
                "description": "Successful operation",
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "status": {
                                    "type": "boolean",
                                    "example": true
                                },
                                "message": {
                                    "type": "string",
                                    "example": "Operation successful"
                                },
                                "data": {
                                    "type": "object",
                                    "example": []
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "201": {
                "description": "Resource created successfully",
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "status": {
                                    "type": "boolean",
                                    "example": true
                                },
                                "message": {
                                    "type": "string",
                                    "example": "Resource created successfully"
                                },
                                "data": {
                                    "type": "object",
                                    "example": []
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "422": {
                "description": "Validation error - invalid input data",
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "status": {
                                    "type": "boolean",
                                    "example": false
                                },
                                "error": {
                                    "type": "string",
                                    "example": "The given data was invalid."
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "404": {
                "description": "Record not updated",
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "status": {
                                    "type": "boolean",
                                    "example": true
                                },
                                "message": {
                                    "type": "string",
                                    "example": "Not Updated!!"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "securitySchemes": {
            "sanctum": {
                "type": "http",
                "scheme": "bearer"
            }
        }
    },
    "tags": [
        {
            "name": "Service Areas",
            "description": "APIs for managing serviceable areas for services"
        },
        {
            "name": "Areas",
            "description": "Areas"
        },
        {
            "name": "Attachments",
            "description": "Attachments"
        },
        {
            "name": "Authentication",
            "description": "Authentication"
        },
        {
            "name": "User Profile completion",
            "description": "User Profile completion"
        },
        {
            "name": "Auth",
            "description": "Auth"
        },
        {
            "name": "Service Eligibility",
            "description": "Service Eligibility"
        },
        {
            "name": "Services",
            "description": "Services"
        }
    ],
    "security": [
        {
            "sanctum": []
        }
    ]
}